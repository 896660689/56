#!/bin/sh
#
# Copyright (C) 2017 openwrt-ssr
#
# This is free software, licensed under the GNU General Public License v3.
# See /LICENSE for more information.
#

cycle_time=10
switch_time=3
normal_flag=0
server_locate=0
NAME=shadowsocksr
ENABLE_SERVER=nil
CONFIG_SWTICH_FILE=/tmp/${NAME}_t.json
China_ping_domain="www.qq.com"
Foreign_wget_domain="http://www.google.com/"
server_count=0
[ -n "$2" ] && cycle_time=$2
[ -n "$3" ] && switch_time=$3

DEFAULT_SERVER=$(nvram get global_server)
CURRENT_SERVER=$DEFAULT_SERVER

#判断代理是否正常
check_proxy() {
	wget --spider --quiet --timeout=3 $Foreign_wget_domain > /dev/null 2>&1
	if [ "$?" == "0" ]; then
		return 0
	else
		/bin/ping -c 3 $China_ping_domain -w 5 >/dev/null 2>&1
		if [ "$?" == "0" ]; then
			#goole不通baidu通则不正常
			return 1
		else
			return 2
		fi
	fi
	return 0
}

test_proxy() {
	servername=$(nvram get ssp_server_x$1)
	serverport=$(nvram get ssp_prot_x$1)
	ret=$(ping -c 3 $servername  | grep 'loss' | awk -F ',' '{ print $3 }' | awk -F "%" '{ print $1 }') 
	ret=$?
	if [ "$ret" = "0" ] ;then
		return 0
	else
		return 1
	fi
}

search_proxy() {
	num=`nvram get ssp_staticnum_x`
	if [ $num = "0"] || [ $num = "1" ]; then
		echo "$(date "+%Y-%m-%d %H:%M:%S") ShadowsocksR no server" >> /tmp/ssrplus.log
		return 0
	fi
	dserver=`nvram get ssp_server_x$DEFAULT_SERVER`
	if [ $server_count != "0" ]; then
		j=`expr $server_count + 1`
	else
		j=$server_count
	fi
	for i in $(seq 1 $num)
	do
		server=`nvram get ssp_server_x$j`
		switch_enable=`nvram get switch_enable_x$j`
		if [ $server != $dserver ]; then
			if [ $switch_enable = "1" ]; then
				if test_proxy $j; then
					echo "$(date "+%Y-%m-%d %H:%M:%S") Another server is avilable, now switching server." >> /tmp/ssrplus.log
					/usr/bin/shadowsocks.sh reserver $j &
					server_count=$j
					echo "$(date "+%Y-%m-%d %H:%M:%S") ShadowsocksR server switch OK" >> /tmp/ssrplus.log
					break
					#return 0
				fi
			fi
		fi
		if [ $j > $i ]; then
			j="0"
		else
			j=`expr $j + 1`
		fi
	done
}

a_start() {
	#不支持kcptun启用时的切换
	[ $(nvram get kcp_enable) = "1"  ]  && return 1

	while [ "1" = "1" ]  #死循环
	do 
		sleep $cycle_time
   		LOGTIME=$(date "+%Y-%m-%d %H:%M:%S")

		#判断当前代理是否为缺省服务器
		if [ "$CURRENT_SERVER" != "$DEFAULT_SERVER" ] ;then
			#echo "not default proxy"
			echo "$(date "+%Y-%m-%d %H:%M:%S") Current server is not default Main server, try to switch back." >> /tmp/ssrplus.log

			#检查缺省服务器是否正常
			if test_proxy $DEFAULT_SERVER  ;then
				#echo "switch to default proxy"
				echo "$(date "+%Y-%m-%d %H:%M:%S") Main server is avilable." >> /tmp/ssrplus.log
				#缺省服务器正常，切换回来
				/usr/bin/shadowsocks.sh reserver $DEFAULT_SERVER
				echo "switch to default ["$(uci_get_by_name $CURRENT_SERVER server)"] proxy!"  >> /tmp/ssrplus.log
				continue
			else
				echo "$(date "+%Y-%m-%d %H:%M:%S") Main server is NOT avilable.Continue using current server." >> /tmp/ssrplus.log
			fi
		fi
		#判断当前代理是否正常
		check_proxy  
		current_ret=$?
		if [ "$current_ret" = "1" ] ;then
			#当前代理错误，判断有无可用的服务器
			#echo "current error"
			echo "$(date "+%Y-%m-%d %H:%M:%S") Current server error, try to switch another server." >> /tmp/ssrplus.log
			search_proxy
			#select_proxy
		else
			normal_flag=0 
			echo "$(date "+%Y-%m-%d %H:%M:%S") ShadowsocksR No Problem."  >> /tmp/ssrplus.log
		fi
	done
}

case $1 in
start)
	a_start
	;;
stop)
	a_close
	;;
*)
	echo "check"
	#exit 0
	;;
esac
